<?php

namespace modava\pages\models\table;

use cheatsheet\Time;
use modava\pages\models\query\ProjectImageQuery;
use Yii;
use yii\db\ActiveRecord;

class ProjectImageTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public static function tableName()
    {
        return 'project_image';
    }

    public static function find()
    {
        return new ProjectImageQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function getImage(string $size = null)
    {
        $image = $this->image_url;
        if (!isset(Yii::$app->params['project'])) {
            $size = '150x150';
            $image = 'no-image.png';
        }
        if (!array_key_exists($size, Yii::$app->params['project'])) $size = array_keys(Yii::$app->params['project'])[0];
        if (is_dir(Yii::getAlias('@frontend/web') . Yii::$app->params['project'][$size]['folder'] . $image) || !file_exists(Yii::getAlias('@frontend/web') . Yii::$app->params['project'][$size]['folder'] . $image)) {
            $size = '150x150';
            $image = 'no-image.png';
        }
        return Yii::$app->assetManager->publish(Yii::getAlias('@frontend/web') . Yii::$app->params['project'][$size]['folder'] . $image)[1];
    }
}
